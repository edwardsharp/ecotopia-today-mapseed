server {
  listen 80;
  server_name ${BASE_SERVER};
  
  include /etc/nginx/snippets/letsencrypt.conf;

  location / {
    return 301 https://${BASE_SERVER};
  }
}
server {
  listen 80;
  server_name ${ADMIN_SERVER};

  include /etc/nginx/snippets/letsencrypt.conf;

  location / {
    return 301 https://${ADMIN_SERVER};
  }
}

server {
  server_name ${BASE_SERVER};
  listen 443 ssl http2;

  ssl_certificate /etc/letsencrypt/live/${BASE_SERVER}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${BASE_SERVER}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/${BASE_SERVER}/fullchain.pem;
  include /etc/nginx/snippets/ssl.conf;

  location / {
    proxy_pass http://app:8000;
    client_max_body_size 100m;
    proxy_buffering off;
  }
}
server {
  server_name ${ADMIN_SERVER};
  listen 443 ssl http2;

  ssl_certificate /etc/letsencrypt/live/${ADMIN_SERVER}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${ADMIN_SERVER}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/${ADMIN_SERVER}/fullchain.pem;
  include /etc/nginx/snippets/ssl.conf;

  location / {
    proxy_pass http://api:8010;
    client_max_body_size 100m;
    proxy_buffering off;
  }

  location /static/ {
    alias /home/core/api_static ;
    expires max;
  }
  gzip on;
  gzip_types
      text/plain text/html text/css text/csv
      application/json application/javascript;
  # error_page 411 = @cors;
  # location @cors {
  #   if ($request_method = 'OPTIONS') {
  #     add_header 'Access-Control-Allow-Origin' 'ecotopia.today';
  #     add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS, TRACE, PUT, POST, DELETE, PATCH, CONNECT';
  #     add_header 'Access-Control-Allow-Headers' 'content-type, *';
  #     add_header 'Access-Control-Allow-Credentials' 'true';
  #     add_header 'Content-Length' 0;
  #     add_header 'Content-Type' 'text/plain';
  #     return 200;
  #   }
  #   return 411;
  # }
}
